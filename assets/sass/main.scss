@import "./members.scss";
@import "./events.scss";

#main {
    height: 100%;
    width: 100%;
    overflow: hidden;
    margin-top: var(--navbar-height);
    display: flex;
    flex-direction: column;
    align-items: center;

    &.home {
        margin-top: 0;
    }
}
#card {
    height: calc(100% - var(--navbar-height));
    width: 75vw;
    min-width: calc(min(800px, 100%));
    max-width: calc(min(1080px, 100%));
    // sadly that hugo scss compiler doesn't recognize min() as a built-in css function :(
    overflow-y: visible;
    background-color: var(--main-card-background-colour);
    padding: 0;
    position: relative;
    box-sizing: border-box;
    box-shadow: 0 0 30px rgba(0, 0, 0, 0.3), 0 0 10px rgba(0, 0, 0, 0.4);
    view-transition-name: container;

    #container {
        height: 100%;
        width: 100%;
        overflow-y: auto;
        overflow-x: hidden;

        &::-webkit-scrollbar {
            width: 10px;
            background-color: var(--main-card-background-colour);
        }
        &::-webkit-scrollbar-thumb {
            background-color: #fff3;
            border-radius: 2px;
            &:hover {
                background-color: #fff4;
            }
        }
        scrollbar-color: #fff3 var(--main-card-background-colour);
        scrollbar-width: thin;

        > .title {
            display: flex;
            padding: 20px 35px;
            background-color: var(--main-card-title-background-colour);
            margin: 0;
            align-items: center;
            gap: 0.5em;
            > svg {
                width: 0.8em;
                height: 0.8em;
            }
            &.title-with-author {
                display: block;
                > h1 {
                    margin: 0;
                }
                .title-author {
                    margin-top: 0.5em;
                    opacity: 0.8;
                }
            }
        }
        > .content {
            display: block;
            padding: 25px 35px;
            background-color: var(--main-card-background-colour);
            //line-height: 1.8;
        }
    }
}
::view-transition-old(container) {
    animation: container-out 0.5s ease;
}
::view-transition-new(container) {
    animation: container-in 0.5s ease;
}

@keyframes container-out {
    0% {
        transform: translateY(0);
    }
    100% {
        transform: translateY(calc(100vh + 310px));
    }
}

@keyframes container-in {
    0% {
        transform: translateY(calc(100vh + 310px));
    }
    100% {
        transform: translateY(0);
    }
}

@supports not (view-transition-name: test) {
    body[from] #card {
        animation: container-in-fallback 0.5s ease;
    }
    body[type="page"][from="page"] #card {
        animation: container-out-fallback-crosspage 0.3s ease;
    }
    @keyframes container-in-fallback {
        0% {
            transform: translateY(calc(100vh + 310px));
        }
        100% {
            transform: translateY(0);
        }
    }
    @keyframes container-out-fallback-crosspage {
        0% {
            transform: translateY(calc(min(60vh, 600px)));
            opacity: 0;
        }
        100% {
            transform: translateY(0);
            opacity: 1;
        }
    }
}

.card-deco {
    position: absolute;
    left: 0;
    top: -300px;
    height: 300px;
    width: 100%;
    filter: drop-shadow(0px -4px 5px rgba(0, 0, 0, 0.3));
    div {
        position: absolute;
        inset: 0;
        pointer-events: none;

        &:nth-child(1) {
            background: #b3994c;
            clip-path: polygon(0 12%, 100% 85%, 100% 100%, 0 100%);
        }
        &:nth-child(2) {
            background: #d0c293;
            clip-path: polygon(0 90%, 100% 25%, 100% 100%, 0 100%);
        }
        &:nth-child(3) {
            background: #3e382a;
            clip-path: polygon(0 50%, 100% 90%, 100% 100%, 0 100%);
        }
        &:nth-child(4) {
            background: #4d4633;
            clip-path: polygon(0 75%, 100% 60%, 100% 100%, 0 100%);
        }
    }
}



footer {
    display: flex;
    width: 100%;
    box-sizing: border-box;
    padding-right: 25px;
    padding-bottom: 25px;
    a {
        display: flex;
        align-items: center;
        gap: 8px;
        color: var(--accent-colour);
        text-decoration: none;
        transition: filter 0.2s ease;
        svg {
            height: 20px;
            width: 20px;
        }
        &:hover {
            filter: brightness(0.85);
            polyline {
                transition: transform 0.2s ease;
            }
            polyline:first-child {
                transform: translateX(6%);
            }
            polyline:last-child {
                transform: translateX(-6%);
            }
        }
    }
    justify-content: flex-end;
}

// article styles
.content {
    img {
        width: 100%;
    }
    a {
        color: var(--accent-colour);
        text-decoration: none;
        transition: filter 0.2s ease;
        &:hover {
            filter: brightness(0.85);
        }
        &:not(:has(img)) {
            position: relative;
            display: inline-block;
            &::after {
                content: '';
                display: block;
                width: 0;
                height: 1px;
                background-color: var(--accent-colour);
                transition: width 0.2s ease;
                position: absolute;
                bottom: -1px;
                left: 50%;
                transform: translateX(-50%);
                pointer-events: none;
            }
            &:hover::after {
                width: 100%;
            }
        }
    }
}